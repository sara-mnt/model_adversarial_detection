{
  "name": "model_adversarial_detection",
  "id": "model_adversarial_detection",
  "description": "",
  "created_on": "14/10/2022, 17:51:10",
  "last_modify": "18/10/2022, 23:04:44",
  "graphs": {
    "main": {
      "nodes": [
        {
          "id": "5bedec45-c6da-42c6-91e3-1d43f66e85e6",
          "position": {
            "x": 421.55198290116573,
            "y": 401.6850286471705
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 156,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "Train model",
                "debug": false,
                "type": "String",
                "value": "Hello world!"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 421.55198290116573,
            "y": 401.6850286471705
          },
          "__class__": "Node"
        },
        {
          "id": "4735b2b4-baa0-40d9-bce8-c583fd8fee52",
          "position": {
            "x": 414.94816565848487,
            "y": 21.876582234950604
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "File Reader",
            "events": null,
            "description": "### Description\nThe FILE READER component allows the reading of individual files.\n\n### Output\nSetting the **Read Content** parameter to **False**, the output provides the file path in PosixPath format. The component will then need to be connected to other components to read the content, for example *LineReader*.\n\nOn the contrary, setting the **Read Content** parameter to **True**, you can choose whether to read the content in *Binary* format. This format will be selected for reading non-text files.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "validation": {
                    "required": "Required field"
                  }
                },
                {
                  "name": "read_content",
                  "type": "boolean",
                  "label": "Read content"
                },
                {
                  "name": "binary",
                  "type": "dynamic",
                  "label": "Binary",
                  "dynamicType": {
                    "true": "boolean"
                  },
                  "parent": "read_content"
                }
              ],
              "click": "Send file",
              "icon": "RiFileList3Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "read_content": false,
                "value": {
                  "name": "t10k-labels-idx1-ubyte.gz",
                  "path": "data/data/t10k-labels-idx1-ubyte.gz",
                  "parent": "data/data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 414.94816565848487,
            "y": 21.876582234950604
          },
          "__class__": "Node"
        },
        {
          "id": "97e4a3e0-7245-4918-968e-ca7d4c9b0be3",
          "position": {
            "x": 1035,
            "y": 22
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 225,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Model Adversarial Detection",
            "events": null,
            "description": "\n### Description\n.....\n### Input\n.....\n### Output\n.....\n\n",
            "inputs": [
              {
                "id": "dataset",
                "label": "Dataset",
                "service": "dataset/read",
                "to": "dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model",
                "service": "model/train",
                "to": "train_model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model with adversarial examples",
                "service": "model/detect",
                "to": "detect_model"
              }
            ],
            "outputs": [
              {
                "id": "dataset",
                "label": "Dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "internal_folder",
                  "type": "text",
                  "label": "Internal dataset folder",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Internal dataset folder to save file",
                  "validation": null
                },
                {
                  "name": "data_type",
                  "type": "text",
                  "label": "Data type in dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Specify if data to save are test or train, labels or images: y_train, y_test, X_train, X_test",
                  "validation": null
                },
                {
                  "name": "model_name",
                  "type": "select",
                  "label": "Model to train",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Name of the model to train. Base : simple neural network",
                  "validation": null,
                  "options": [
                    "base"
                  ]
                },
                {
                  "name": "trained_model",
                  "type": "asyncSelect",
                  "label": "Trained model file",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/models"
                },
                {
                  "name": "dataset",
                  "type": "asyncSelect",
                  "label": "Dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/datasets"
                },
                {
                  "name": "adversarial_method",
                  "type": "select",
                  "label": "Adversarial Method",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "options": [
                    "carlini_wagner"
                  ]
                }
              ],
              "click": "Send message",
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "y_test",
                "debug": true,
                "internal_folder": "mnist",
                "data_type": "y_test",
                "model_name": "base",
                "adversarial_method": "carlini_wagner",
                "trained_model": "",
                "dataset": "mnist"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1035,
            "y": 22
          },
          "__class__": "Node"
        },
        {
          "id": "b38de575-1d91-4060-9571-474ae8c6d580",
          "position": {
            "x": 655.9481656584849,
            "y": 98.8765822349506
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "File Reader",
            "events": null,
            "description": "### Description\nThe FILE READER component allows the reading of individual files.\n\n### Output\nSetting the **Read Content** parameter to **False**, the output provides the file path in PosixPath format. The component will then need to be connected to other components to read the content, for example *LineReader*.\n\nOn the contrary, setting the **Read Content** parameter to **True**, you can choose whether to read the content in *Binary* format. This format will be selected for reading non-text files.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "validation": {
                    "required": "Required field"
                  }
                },
                {
                  "name": "read_content",
                  "type": "boolean",
                  "label": "Read content"
                },
                {
                  "name": "binary",
                  "type": "dynamic",
                  "label": "Binary",
                  "dynamicType": {
                    "true": "boolean"
                  },
                  "parent": "read_content"
                }
              ],
              "click": "Send file",
              "icon": "RiFileList3Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "read_content": false,
                "value": {
                  "name": "train-labels-idx1-ubyte.gz",
                  "path": "data/data/train-labels-idx1-ubyte.gz",
                  "parent": "data/data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 655.9481656584849,
            "y": 98.8765822349506
          },
          "__class__": "Node"
        },
        {
          "id": "4c2b1103-0db9-44b3-9c0a-a1490e81ae6c",
          "position": {
            "x": 1320,
            "y": 104
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 225,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Model Adversarial Detection",
            "events": null,
            "description": "\n### Description\n.....\n### Input\n.....\n### Output\n.....\n\n",
            "inputs": [
              {
                "id": "dataset",
                "label": "Dataset",
                "service": "dataset/read",
                "to": "dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model",
                "service": "model/train",
                "to": "train_model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model with adversarial examples",
                "service": "model/detect",
                "to": "detect_model"
              }
            ],
            "outputs": [
              {
                "id": "dataset",
                "label": "Dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "internal_folder",
                  "type": "text",
                  "label": "Internal dataset folder",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Internal dataset folder to save file",
                  "validation": null
                },
                {
                  "name": "data_type",
                  "type": "text",
                  "label": "Data type in dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Specify if data to save are test or train, labels or images: y_train, y_test, X_train, X_test",
                  "validation": null
                },
                {
                  "name": "model_name",
                  "type": "select",
                  "label": "Model to train",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Name of the model to train. Base : simple neural network",
                  "validation": null,
                  "options": [
                    "base"
                  ]
                },
                {
                  "name": "trained_model",
                  "type": "asyncSelect",
                  "label": "Trained model file",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/models"
                },
                {
                  "name": "dataset",
                  "type": "asyncSelect",
                  "label": "Dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/datasets"
                },
                {
                  "name": "adversarial_method",
                  "type": "select",
                  "label": "Adversarial Method",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "options": [
                    "carlini_wagner"
                  ]
                }
              ],
              "click": "Send message",
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "y_train",
                "debug": true,
                "internal_folder": "mnist",
                "data_type": "y_train",
                "model_name": "base",
                "adversarial_method": "carlini_wagner",
                "dataset": "mnist",
                "trained_model": ""
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1320,
            "y": 104
          },
          "__class__": "Node"
        },
        {
          "id": "1b772ae7-447c-4bb3-bdab-816cf114c38a",
          "position": {
            "x": 423.94816565848487,
            "y": 164.8765822349506
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "File Reader",
            "events": null,
            "description": "### Description\nThe FILE READER component allows the reading of individual files.\n\n### Output\nSetting the **Read Content** parameter to **False**, the output provides the file path in PosixPath format. The component will then need to be connected to other components to read the content, for example *LineReader*.\n\nOn the contrary, setting the **Read Content** parameter to **True**, you can choose whether to read the content in *Binary* format. This format will be selected for reading non-text files.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "validation": {
                    "required": "Required field"
                  }
                },
                {
                  "name": "read_content",
                  "type": "boolean",
                  "label": "Read content"
                },
                {
                  "name": "binary",
                  "type": "dynamic",
                  "label": "Binary",
                  "dynamicType": {
                    "true": "boolean"
                  },
                  "parent": "read_content"
                }
              ],
              "click": "Send file",
              "icon": "RiFileList3Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "read_content": false,
                "value": {
                  "name": "train-images-idx3-ubyte.gz",
                  "path": "data/data/train-images-idx3-ubyte.gz",
                  "parent": "data/data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 423.94816565848487,
            "y": 164.8765822349506
          },
          "__class__": "Node"
        },
        {
          "id": "b234e490-0539-4bd6-8ee6-fb200208d393",
          "position": {
            "x": 937,
            "y": 177
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Model Adversarial Detection",
            "events": null,
            "description": "\n### Description\n.....\n### Input\n.....\n### Output\n.....\n\n",
            "inputs": [
              {
                "id": "dataset",
                "label": "Dataset",
                "service": "dataset/read",
                "to": "dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model",
                "service": "model/train",
                "to": "train_model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model with adversarial examples",
                "service": "model/detect",
                "to": "detect_model"
              }
            ],
            "outputs": [
              {
                "id": "dataset",
                "label": "Dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "internal_folder",
                  "type": "text",
                  "label": "Internal dataset folder",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Internal dataset folder to save file",
                  "validation": null
                },
                {
                  "name": "data_type",
                  "type": "text",
                  "label": "Data type in dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Specify if data to save are test or train, labels or images: y_train, y_test, X_train, X_test",
                  "validation": null
                },
                {
                  "name": "model_name",
                  "type": "select",
                  "label": "Model to train",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Name of the model to train. Base : simple neural network",
                  "validation": null,
                  "options": [
                    "base"
                  ]
                },
                {
                  "name": "trained_model",
                  "type": "asyncSelect",
                  "label": "Trained model file",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/models"
                },
                {
                  "name": "dataset",
                  "type": "asyncSelect",
                  "label": "Dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/datasets"
                },
                {
                  "name": "adversarial_method",
                  "type": "select",
                  "label": "Adversarial Method",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "options": [
                    "carlini_wagner"
                  ]
                }
              ],
              "click": "Send message",
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "X_train",
                "debug": true,
                "internal_folder": "mnist",
                "data_type": "X_train",
                "model_name": "base",
                "adversarial_method": "carlini_wagner",
                "trained_model": "",
                "dataset": "mnist"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 937,
            "y": 177
          },
          "__class__": "Node"
        },
        {
          "id": "7c983086-642e-4a7a-a6da-2e559585d692",
          "position": {
            "x": 661.9481656584849,
            "y": 261.8765822349506
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "File Reader",
            "events": null,
            "description": "### Description\nThe FILE READER component allows the reading of individual files.\n\n### Output\nSetting the **Read Content** parameter to **False**, the output provides the file path in PosixPath format. The component will then need to be connected to other components to read the content, for example *LineReader*.\n\nOn the contrary, setting the **Read Content** parameter to **True**, you can choose whether to read the content in *Binary* format. This format will be selected for reading non-text files.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Inputs",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "value",
                  "type": "files",
                  "label": "File",
                  "fragment": "files",
                  "validation": {
                    "required": "Required field"
                  }
                },
                {
                  "name": "read_content",
                  "type": "boolean",
                  "label": "Read content"
                },
                {
                  "name": "binary",
                  "type": "dynamic",
                  "label": "Binary",
                  "dynamicType": {
                    "true": "boolean"
                  },
                  "parent": "read_content"
                }
              ],
              "click": "Send file",
              "icon": "RiFileList3Fill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "read_content": false,
                "value": {
                  "name": "t10k-images-idx3-ubyte.gz",
                  "path": "data/data/t10k-images-idx3-ubyte.gz",
                  "parent": "data/data",
                  "isDir": false,
                  "hidden": false
                }
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 661.9481656584849,
            "y": 261.8765822349506
          },
          "__class__": "Node"
        },
        {
          "id": "cc27e7f0-f45a-4323-a6ff-7c8eae2227d9",
          "position": {
            "x": 1351,
            "y": 276
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 289,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Model Adversarial Detection",
            "events": null,
            "description": "\n### Description\n.....\n### Input\n.....\n### Output\n.....\n\n",
            "inputs": [
              {
                "id": "dataset",
                "label": "Dataset",
                "service": "dataset/read",
                "to": "dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model",
                "service": "model/train",
                "to": "train_model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model with adversarial examples",
                "service": "model/detect",
                "to": "detect_model"
              }
            ],
            "outputs": [
              {
                "id": "dataset",
                "label": "Dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "internal_folder",
                  "type": "text",
                  "label": "Internal dataset folder",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Internal dataset folder to save file",
                  "validation": null
                },
                {
                  "name": "data_type",
                  "type": "text",
                  "label": "Data type in dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Specify if data to save are test or train, labels or images: y_train, y_test, X_train, X_test",
                  "validation": null
                },
                {
                  "name": "model_name",
                  "type": "select",
                  "label": "Model to train",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Name of the model to train. Base : simple neural network",
                  "validation": null,
                  "options": [
                    "base"
                  ]
                },
                {
                  "name": "trained_model",
                  "type": "asyncSelect",
                  "label": "Trained model file",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/models"
                },
                {
                  "name": "dataset",
                  "type": "asyncSelect",
                  "label": "Dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/datasets"
                },
                {
                  "name": "adversarial_method",
                  "type": "select",
                  "label": "Adversarial Method",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "options": [
                    "carlini_wagner"
                  ]
                }
              ],
              "click": "Send message",
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "X_test",
                "debug": true,
                "internal_folder": "mnist",
                "data_type": "X_test",
                "model_name": "base",
                "adversarial_method": "carlini_wagner",
                "trained_model": "",
                "dataset": "mnist"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 1351,
            "y": 276
          },
          "__class__": "Node"
        },
        {
          "id": "a25d61a2-18e1-412b-8e6e-7911b4351ce5",
          "position": {
            "x": 717,
            "y": 405
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 225,
          "height": 104,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Model Adversarial Detection",
            "events": null,
            "description": "\n### Description\n.....\n### Input\n.....\n### Output\n.....\n\n",
            "inputs": [
              {
                "id": "dataset",
                "label": "Dataset",
                "service": "dataset/read",
                "to": "dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model",
                "service": "model/train",
                "to": "train_model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model with adversarial examples",
                "service": "model/detect",
                "to": "detect_model"
              }
            ],
            "outputs": [
              {
                "id": "dataset",
                "label": "Dataset"
              },
              {
                "id": "train_model",
                "label": "Train Model"
              },
              {
                "id": "detect_model",
                "label": "Detect Model"
              }
            ],
            "configured": true,
            "options": {
              "group": "Custom",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "internal_folder",
                  "type": "text",
                  "label": "Internal dataset folder",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Internal dataset folder to save file",
                  "validation": null
                },
                {
                  "name": "data_type",
                  "type": "text",
                  "label": "Data type in dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Specify if data to save are test or train, labels or images: y_train, y_test, X_train, X_test",
                  "validation": null
                },
                {
                  "name": "model_name",
                  "type": "select",
                  "label": "Model to train",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "Name of the model to train. Base : simple neural network",
                  "validation": null,
                  "options": [
                    "base"
                  ]
                },
                {
                  "name": "trained_model",
                  "type": "asyncSelect",
                  "label": "Trained model file",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/models"
                },
                {
                  "name": "dataset",
                  "type": "asyncSelect",
                  "label": "Dataset",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "url": "http://localhost:9999/routes/model_adversarial_detection/datasets"
                },
                {
                  "name": "adversarial_method",
                  "type": "select",
                  "label": "Adversarial Method",
                  "helper": "",
                  "group": "",
                  "value": null,
                  "description": "",
                  "validation": null,
                  "options": [
                    "carlini_wagner"
                  ]
                }
              ],
              "click": "Send message",
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "train",
                "debug": true,
                "internal_folder": "mnist",
                "data_type": "",
                "model_name": "base",
                "adversarial_method": "carlini_wagner",
                "trained_model": "",
                "dataset": "mnist"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 717,
            "y": 405
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-4735b2b4-baa0-40d9-bce8-c583fd8fee52output-97e4a3e0-7245-4918-968e-ca7d4c9b0be3dataset",
          "source": "4735b2b4-baa0-40d9-bce8-c583fd8fee52",
          "sourceHandle": "output",
          "target": "97e4a3e0-7245-4918-968e-ca7d4c9b0be3",
          "targetHandle": "dataset",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "a46af1e4-e0a2-4e8c-84a5-e929e5e87ace",
          "source": "b38de575-1d91-4060-9571-474ae8c6d580",
          "sourceHandle": "output",
          "target": "4c2b1103-0db9-44b3-9c0a-a1490e81ae6c",
          "targetHandle": "dataset",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "df4774d8-2bdf-43d4-9016-d9d55603815e",
          "source": "1b772ae7-447c-4bb3-bdab-816cf114c38a",
          "sourceHandle": "output",
          "target": "b234e490-0539-4bd6-8ee6-fb200208d393",
          "targetHandle": "dataset",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "10694cc6-964d-4d50-8f43-89fa1c539214",
          "source": "7c983086-642e-4a7a-a6da-2e559585d692",
          "sourceHandle": "output",
          "target": "cc27e7f0-f45a-4323-a6ff-7c8eae2227d9",
          "targetHandle": "dataset",
          "data": {
            "startColor": "#F8637A",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-5bedec45-c6da-42c6-91e3-1d43f66e85e6output-a25d61a2-18e1-412b-8e6e-7911b4351ce5train_model",
          "source": "5bedec45-c6da-42c6-91e3-1d43f66e85e6",
          "sourceHandle": "output",
          "target": "a25d61a2-18e1-412b-8e6e-7911b4351ce5",
          "targetHandle": "train_model",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    }
  },
  "open": [
    "main"
  ],
  "active": "main",
  "version": "1.0.0",
  "__class__": "Project"
}